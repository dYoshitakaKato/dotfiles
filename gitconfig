[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[user]
	name = dYoshitakaKato
	email = phoenix1331019@gmail.com
	signingkey = CA4F7FF3ADBBAEFBAE32E70275A9028FA895F27F

[core]
    ignorecase = false
    quotepath = false
    safecrlf = true
	excludesfile = /Users/yoshitaka.kato/.gitignore_global
[alias]
 #  https://qiita.com/yukiarrr/items/9c21d97f6c8ac31de157
    # 標準的なコマンド
    b = branch
    c = commit
    cm = commit -m
    f = fetch
    s = status
    st = stash
    rh = reset --hard

    # リモート含めブランチをcheckoutする
    co = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"

    # ファイルの差分をプレビュー付きで確認する
    d = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f"

    # 差分を選択してaddする
    da = !git d | xargs git add --

    # 差分を選択してadd -pする
    dap = "!f() { for f in $(git d); do git add -p -- $f; done }; f"

    # 差分を選択してresetする
    dr = !git d | xargs git reset --

    # 差分を選択してHEADにcheckoutする
    dch = !git d | xargs git checkout HEAD

    # 現在のブランチをpullする
    pl = "!f() { args=$@; [ -z \"$args\" ] && git pull origin $(git symbolic-ref --short HEAD) || git pull $args; }; f"

    # 現在のブランチをpushする
    ps = "!f() { args=$@; [ -z \"$args\" ] && git push origin HEAD || git push $args; }; f"

    # スタッシュのリストを表示する
    stl = !git stash list | fzf --preview 'echo {} | grep -o stash@{.*} | xargs git stash show -p --color=always' --height 90% | grep -o stash@{.*}

    # スタッシュを選択してapplyする
    sta = !git stl | xargs git stash apply

    # スタッシュを選択してdropする
    std = !git stl | xargs git stash drop
[ghq]
  	root = ~/src
  	root = ~/.dotfiles

[credential]
	helper = osxkeychain
[diff]
	renames = copies
[merge]
	conflictstyle = diff3
	tool = vimdiff
[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less
[push]
	default = current
[rebase]
	autosquash = true
[rerere]
	enabled = true
	autoupdate = true
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[ghi]
	token = !security find-internet-password -a davidcelis -s github.com -l 'ghi token' -w
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[grep]
	extendedRegexp = true
	fullName = true
[commit]
	gpgsign = true
	template = /Users/yoshitaka.kato/.stCommitMsg
[interactive]
	diffFilter = diff-highlight
[gpg]
	program = gpg
